How did viewing a diff between two versions of a file help you see the bug that was introduced?

I was able to spot the mistake that was made in the newer version of the file

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

It makes it easy for me to go back and see how I have been thinking through out the
process of coding the programm or app ,and it would be easier to recreate the process
at a later time if neccessary. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

The pros are that you create commits at relavent point, 
the cons are that you might miss certain points that would have been good to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

The files we use when saving are more likley to be inter-related so it is usesful
to save them together, to track the changes easier.

How can you use the commands git log and git diff to view the history of files?

git log gives you all the commits while git diff gives you the changes made between
two different commit situations

How might using version control make you more confident to make changes that
could break something?

version control stores the old versions of the files before they had been changed 
as a result even if the program breaks you can still return to the last working version 
Now that you have your workspace set up, what do you want to try using Git for?